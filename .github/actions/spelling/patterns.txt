# See https://github.com/check-spelling/check-spelling/wiki/Configuration-Examples:-patterns

# Automatically suggested patterns
# hit-count: 409 file-count: 70
# https/http/file urls
(?:\b(?:https?|ftp|file)://)[-A-Za-z0-9+&@#/%?=~_|!:,.;]+[-A-Za-z0-9+&@#/%=~_|]

# hit-count: 63 file-count: 24
# version suffix <word>v#
(?:(?<=[A-Z]{2})V|(?<=[a-z]{2}|[A-Z]{2})v)\d+(?:\b|(?=[a-zA-Z_]))

# hit-count: 13 file-count: 1
# css url wrappings
\burl\([^)]*\)

# hit-count: 11 file-count: 2
# hex digits including css/html color classes:
(?:[\\0][xX]|\\u|[uU]\+|#x?|\%23)[0-9_a-fA-FgGrR]*?[a-fA-FgGrR]{2,}[0-9_a-fA-FgGrR]*(?:[uUlL]{0,3}|[iu]\d+)\b

# hit-count: 5 file-count: 2
# in a version of check-spelling after @0.0.21 printf markers won't be automatically consumed
# printf markers
(?<!\\)\\[nrt](?=[a-z]{2,})

# hit-count: 5 file-count: 1
# Compiler flags
(?:^|[\t ,>"'`=(])-ld(?=[A-Z]{2,}|[A-Z][a-z]|[a-z]{2,})

# hit-count: 3 file-count: 3
# hex runs
\b[0-9a-fA-F]{16,}\b

# hit-count: 3 file-count: 1
# tar arguments
\b(?:\\n|)g?tar(?:\.exe|)(?:(?:\s+--[-a-zA-Z]+|\s+-[a-zA-Z]+|\s[ABGJMOPRSUWZacdfh-pr-xz]+\b)(?:=[^ ]*|))+

# hit-count: 2 file-count: 2
# IPv6
\b(?:[0-9a-fA-F]{0,4}:){3,7}[0-9a-fA-F]{0,4}\b

# hit-count: 2 file-count: 2
# Go regular expressions
regexp?\.MustCompile\(`[^`]*`\)

# hit-count: 2 file-count: 2
# base64 encoded content
(['"])[-a-zA-Z=;:/0-9+]{10,}=

# hit-count: 1 file-count: 1
# sha-... -- uses a fancy capture
(\\?['"]|&quot;)[0-9a-f]{40,}\g{-1}

# hit-count: 1 file-count: 1
# curl arguments
\b(?:\\n|)curl(?:\s+-[a-zA-Z]{1,2}\b)*(?:\s+-[a-zA-Z]{3,})(?:\s+-[a-zA-Z]+)*

# Goo.gl
/goo\.gl/[a-zA-Z0-9]+
# GitHub SHAs
(?:\[[0-9a-f]+\]\(https:/|)/github\.com/[^/]+/[^/]+/[^/]+/[0-9a-f]+\b
# uuid:
[{"'][0-9a-fA-F]{8}-(?:[0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}['"}]
# Slack
slack://[a-zA-Z0-9?&=]+

"[0-9a-f]{32}"

"code_(?:challenge|verifier)", "[a-zA-Z0-9-]{43}"

# Keys
^[a-zA-Z=;,/0-9+-]{64}$

# Okta
>http://www.okta.com/\w{20}<

"\$[$a-zA-Z=;,/0-9+-.]*"
Token(?:Hash|)\s*= "[^"]*"
hash: "\w{80}"
"access_token": "\w{36}"

"at_hash": "\w{22}"
code=\w{22}\b
state=\w{11}\b
access_token=\w{10}\b
inResponseTo:\s*"\w{26}"
InResponseTo="\w{26}"
SessionIndex="\w{26}"
"sub": "\w{23}"

id_token=eyJ0[a-zA-Z0-9. ]{46}
eyJhbG[$a-zA-Z=;,/0-9+-._]*$
^Np4v\w{47}=$
[Ss]ecret(?:: "?|", ")[-a-zA-Z=;:/0-9+]{10,}

code\w+ := "[-a-zA-Z=;:/0-9+_]+"
[Tt]oken"?: +"[-a-zA-Z=;:/0-9+]+"
(?:Certificate|Value)>[-a-zA-Z=;:/0-9+]+
^[-a-zA-Z=;:/0-9+]+</

# Questionably acceptable forms of `in to`
# Personally, I prefer `log into`, but people object
# https://www.tprteaching.com/log-into-log-in-to-login/
\b[Ll]og in to\b

# acceptable duplicates
# ls directory listings
[-bcdlpsw](?:[-r][-w][-Ssx]){3}\s+\d+\s+\S+\s+\S+\s+\d+\s+
# mount
\bmount\s+-t\s+(\w+)\s+\g{-1}\b
# C types and repeated CSS values
\s(center|div|inherit|long|LONG|mysql|none|normal|solid|thin|transparent|very)(?: \g{-1})+\s
# C struct
\bstruct\s+(\w+)\s+\g{-1}\b
# go templates
\s(\w+)\s+\g{-1}\s+\`(?:graphql|inject|json|yaml):
# javadoc / .net
(?:[\\@](?:groupname|param)|(?:public|private)(?:\s+static|\s+readonly)*)\s+(\w+)\s+\g{-1}\s

# Commit message -- Signed-off-by and friends
^\s*(?:(?:Based-on-patch|Co-authored|Helped|Mentored|Reported|Reviewed|Signed-off)-by|Thanks-to): (?:[^<]*<[^>]*>|[^<]*)\s*$

# Autogenerated revert commit message
^This reverts commit [0-9a-f]{40}\.$

# ignore long runs of a single character:
\b([A-Za-z])\g{-1}{3,}\b
